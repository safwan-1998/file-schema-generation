name: Publish
on:
  push:
    branches:
      - main
      - releases/**

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Git Identity
        run: |
          git config --global user.name 'release-bot'
          git remote set-url origin https://${GITHUB_ACTOR}:${{secrets.SEMANTIC_RELEASE_GIT_TOKEN}}@github.com/$GITHUB_REPOSITORY

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'

      - name: Get node modules cache
        uses: actions/cache@v2
        id: cache-node-modules
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-node_modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-node_modules-

      - name: Install dependencies
        run: yarn install --frozen-lockfile
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Create release pull request or publish
        id: changesets
        uses: changesets/action@v1
        with:
          commit: 'chore: release'
          publish: yarn release
          title: 'chore: release'
        env:
          GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_GIT_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
